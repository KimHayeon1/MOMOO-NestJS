generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @default(autoincrement()) @id
  email        String  @unique
  nickName     String  @unique
  photoUrl     String?
  posts        Post[]  @relation("UserPosts")
  albums       Album[] @relation("UserAlbums")
  sharedAlbums SharedAlbum[] @relation("UserSharedAlbums")
}

model Album {
  id          Int          @default(autoincrement()) @id
  title       String
  createdAt   DateTime     @default(now())
  posts       AlbumPost[]
  author      User         @relation("UserAlbums", fields: [authorId], references: [id], onDelete: Cascade)
  authorId    Int
  sharedUsers SharedAlbum[]  @relation("AlbumSharedUsers")
}

model AlbumPost {
  album     Album   @relation(fields: [albumId], references: [id], onDelete: Cascade)
  albumId   Int
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int

  @@id([albumId, postId])
}

model SharedAlbum {
  userId     Int     
  albumId    Int     
  permission Permission 
  user       User       @relation("UserSharedAlbums", fields: [userId], references: [id], onDelete: Cascade) 
  album      Album      @relation("AlbumSharedUsers", fields: [albumId], references: [id], onDelete: Cascade)

  @@id([userId, albumId])
}

model Post {
  id        Int      @default(autoincrement()) @id
  photos    String[]
  title     String
  content   String?
  address   String?
  emotion   String?
  weather   String?
  createdAt DateTime @default(now())
  author    User     @relation("UserPosts", fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  albums    AlbumPost[]
}

enum Permission {
  read
  write
  owner
}